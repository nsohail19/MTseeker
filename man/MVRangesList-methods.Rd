% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MVRangesList.R
\docType{methods}
\name{MVRangesList}
\alias{MVRangesList}
\alias{MVRangesList-methods}
\alias{genomeCoverage,MVRangesList-method}
\alias{genes,MVRangesList-method}
\alias{snpCall,MVRangesList-method}
\alias{getAnnotations,MVRangesList-method}
\alias{encoding,MVRangesList-method}
\alias{coverage,MVRangesList-method}
\alias{predictCoding,MVRangesList,missing,missing,missing-method}
\alias{show,MVRangesList-method}
\alias{filt,MVRangesList-method}
\alias{granges,MVRangesList-method}
\alias{summarizeVariants,MVRangesList,missing,missing-method}
\alias{genome,MVRangesList-method}
\alias{locateVariants,MVRangesList,missing,missing-method}
\alias{plot,MVRangesList,ANY-method}
\alias{consensusString,MVRangesList-method}
\title{Wrap a VRangesList for mitochondrial use.}
\usage{
MVRangesList(...)

\S4method{genomeCoverage}{MVRangesList}(x)

\S4method{genes}{MVRangesList}(x)

\S4method{snpCall}{MVRangesList}(object)

\S4method{getAnnotations}{MVRangesList}(annotations)

\S4method{encoding}{MVRangesList}(x)

\S4method{coverage}{MVRangesList}(x)

\S4method{predictCoding}{MVRangesList,missing,missing,missing}(query,
  subject, seqSource, varAllele, ...)

\S4method{show}{MVRangesList}(object)

\S4method{filt}{MVRangesList}(x)

\S4method{granges}{MVRangesList}(x, filterLowQual = TRUE)

\S4method{summarizeVariants}{MVRangesList,missing,missing}(query,
  filterLowQual = TRUE, ...)

\S4method{genome}{MVRangesList}(x)

\S4method{locateVariants}{MVRangesList,missing,missing}(query,
  filterLowQual = TRUE, ...)

\S4method{plot}{MVRangesList,ANY}(x, y, ...)

\S4method{consensusString}{MVRangesList}(x, ...)
}
\arguments{
\item{...}{miscellaneous args, passed through}

\item{x}{an MVRangesList (for some methods)}

\item{object}{an MVRangesList (for other methods)}

\item{annotations}{an MVRangesList (for getAnnotations)}

\item{query}{an MVRangesList (for predictCoding)}

\item{subject}{a GRanges, usually}

\item{seqSource}{a BSgenome, usually}

\item{varAllele}{variant alleles}

\item{filterLowQual}{opt. for `granges`/`summarizeVariants`}

\item{y}{another MVRangesList}
}
\value{
the MVRangesList

depends on the method invoked.
}
\description{
Usually an MVRangesList will be created by callMT.
}
\details{
If the elements were generated by pileupMT(), a coverageRles DataFrame
will be generated and placed into the metadata() list for the result. 
Similarly, if an element named 'bam' is located in the metadata of the
supplied arguments, it will be combined into a vector named bamFiles.
}
\section{Utility methods}{


`genomeCoverage`       returns estimated mitochondrial read coverage depth
`coverage`             returns an RleList of coverage for each sample's chrM
`filt`                 removes variants where PASS != TRUE for each element
}

\section{Annotation methods}{


`genes`                returns an annotated GRanges of mitochondrial genes 
`getAnnotations`       returns a GRanges of annotated mitochondrial features
`genome`               returns the genome (or, perhaps, genomes) in an MVRL
`encoding`             returns mutations in coding regions for each element
`granges`              returns mildly annotated aggregates of variant sites
`snpCall`              retrieves single nucleotide variant polymorphisms 
`locateVariants`       locates variants within genes, tRNA, rRNA, or D-loop
`summarizeVariants`    attempts mass functional annotation of variant sites
`consensusString`      creates consensus genotypes from rCRS for eg Haplogrep
}

\section{Visualization methods}{


`plot`                 creates circular plot of mitochondrial variant calls
}

\examples{

library(MTseekerData)
BAMdir <- system.file("extdata", "BAMs", package="MTseekerData")
BAMs <- paste0(BAMdir, "/", list.files(BAMdir, pattern=".bam$"))
targets <- data.frame(BAM=BAMs, stringsAsFactors=FALSE) 
rownames(targets) <- sapply(strsplit(basename(BAMs), "\\\\."), `[`, 1)
(mall <- getMT(targets))

if (requireNamespace("GmapGenome.Hsapiens.rCRS", quietly=TRUE)) {
  (mvrl <- callMT(mall))
  filt(mvrl$pt1_cell1)
} else { 
  message("You have not yet installed an rCRS reference genome.")
  message("Consider running the indexMTgenome() function to do so.")
  message("An example MVRangesList is RONKSvariants from MTseekerData.")
}

}
